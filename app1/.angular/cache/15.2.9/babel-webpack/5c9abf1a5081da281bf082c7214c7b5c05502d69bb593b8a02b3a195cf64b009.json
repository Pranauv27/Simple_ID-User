{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.backendURL = 'http://localhost:8000';\n  }\n  getUsers() {\n    console.log('get all users function triggered in service');\n    return this.http.get(this.backendURL.concat('/users'));\n  }\n  addUser(user) {\n    console.log('add user function triggered in service');\n    return this.http.post(this.backendURL.concat('/users'), user);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,eAAU,GAAG,uBAAuB;EAEJ;EAExCC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1D,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACC,UAAU,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;EAChE;EAEAC,OAAO,CAACC,IAAU;IAChBN,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,OAAO,IAAI,CAACH,IAAI,CAACS,IAAI,CAAO,IAAI,CAACJ,UAAU,CAACC,MAAM,CAAC,QAAQ,CAAC,EAACE,IAAI,CAAC;EACpE;;AAdWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["DataService","constructor","http","getUsers","console","log","get","backendURL","concat","addUser","user","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/pranauv/Documents/ID-User/front-end/app1/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private backendURL = 'http://localhost:8000';\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<User[]> {\n    console.log('get all users function triggered in service');\n    return this.http.get<User[]>(this.backendURL.concat('/users'));\n  }\n\n  addUser(user: User): Observable<User> {\n    console.log('add user function triggered in service');\n    return this.http.post<User>(this.backendURL.concat('/users'),user);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}